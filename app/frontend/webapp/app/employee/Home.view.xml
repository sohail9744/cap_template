<mvc:View
    controllerName="wisys.frontend.app.employee.Home"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns="sap.m"
    displayBlock="true"
    height="100%"
    busyIndicatorDelay="0"
    xmlns:form="sap.ui.layout.form"
    xmlns:core="sap.ui.core"
    xmlns:u="sap.ui.unified"
>
    <Page
        id="idPage"
        title="Employee Registration form"
    >
        <content>
            <form:SimpleForm
                id="SimpleFormChange354"
                editable="true"
                layout="ResponsiveGridLayout"
                labelSpanXL="3"
                labelSpanL="5"
                labelSpanM="3"
                labelSpanS="12"
                adjustLabelSpan="false"
                emptySpanXL="1"
                emptySpanL="1"
                emptySpanM="0"
                emptySpanS="0"
                columnsXL="2"
                columnsL="2"
                columnsM="1"
                singleContainerFullSize="false"
                width="100%"
                backgroundDesign="Transparent"
            >
                <form:content>
                    <core:Title text="" />
                    <!-- Employee Id -->
                    <Label
                        text="Employee Id"
                        visible="{= ${empModel>/employee/EmpId} ? true : false}"
                    />
                    <Input
                        value="{empModel>/employee/EmpId}"
                        visible="{= ${empModel>/employee/EmpId} ? true : false}"
                        editable="false"
                    />
                    <!-- Business Unit -->
                    <Label
                        id="idBusinessUnitLabel"
                        text="Business Unit"
                    />
                    <Select
                        id="idBusinessUnitSelect"
                        width="100%"
                        selectedKey="{empModel>/employee/BusinessUnit_BusinessUnitId}"
                        items="{empModel>/businessUnit}"
                        valueStateText="{= ${validation>/BusinessUnit_BusinessUnitId_ValueState} === 'Error' ? 'Select Business unit' : ''}"
                        valueState="{validation>/BusinessUnit_BusinessUnitId_ValueState}"
                        forceSelection="false"
                        editable="{userModel>/auth/create}"
                    >
                        <core:Item
                            id="idBusinessUnitItem"
                            key="{empModel>BusinessUnitId}"
                            text="{empModel>BusinessUnitName}"
                        />
                        <!-- <core:Item id="idBusinessUnitItem" key="{BusinessUnitSet>SeqId}" text="{BusinessUnitSet>BusinessUnit}" /> -->
                    </Select>
                    <!-- Site -->
                    <Label
                        id="idSiteLabel"
                        text="Site"
                    />
                    <Select
                        id="idSiteSelect"
                        width="100%"
                        selectedKey="{empModel>/employee/Site_SiteId}"
                        items="{empModel>/site}"
                        valueStateText="{= ${validation>/Site_SiteId_ValueState} === 'Error' ? 'Select Site' : ''}"
                        valueState="{validation>/Site_SiteId_ValueState}"
                        forceSelection="false"
                        editable="{userModel>/auth/create}"
                        wrapItemsText="true"
                    >
                        <core:Item
                            id="idSiteItem"
                            key="{empModel>SiteId}"
                            text="{empModel>SiteName}"
                        />
                        <!-- <core:Item id="idSiteItem" key="{SiteSet>SeqId}" text="{SiteSet>Site}" /> -->
                    </Select>
                    <!-- Employee Full Name -->
                    <Label
                        id="idEmployeeFullNameLabel"
                        text="Employee Full Name"
                    />
                    <Input
                        id="idEmployeeFullNameInput"
                        value="{empModel>/employee/EmpFirstName}"
                        valueStateText="{= ${validation>/EmpFirstName_ValueState} === 'Error' ? 'Required and Max Length 50' : ''}"
                        valueState="{validation>/EmpFirstName_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Employee Phone Number -->
                    <Label text="Employee Phone Number" />
                    <Input
                        value="{empModel>/employee/EmpPhone}"
                        valueStateText="{= ${validation>/EmpPhone_ValueState} === 'Error' ? 'Required and Max Length 10' : ''}"
                        valueState="{validation>/EmpPhone_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Employee Full Name (Arabic) -->
                    <Label
                        id="idEmployeeFullNameArabicLabel"
                        text="Employee Full Name"
                    />
                    <Input
                        id="idEmployeeFullNameArInput"
                        value="{empModel>/employee/EmpFirstNameAr}"
                        valueStateText="{= ${validation>/EmpFirstNameAr_ValueState} === 'Error' ? 'Arabic text and Max Length 50' : ''}"
                        valueState="{validation>/EmpFirstNameAr_ValueState}"
                        editable="{userModel>/auth/create}"
                        liveChange="onArabicInputChange"
                    />
                    <!-- Employee Iqama ID -->
                    <Label
                        id="idEmployeeIqamaIDLabel"
                        text="Employee Iqama ID"
                    />
                    <Input
                        id="idEmployeeIqamaIdInput"
                        value="{empModel>/employee/EmpIqama}"
                        maxLength="{validation>/EmpIqama_MaxLength}"
                        valueStateText="{= ${validation>/EmpIqama_ValueState} === 'Error' ? 'Required and Max Length 10' : ''}"
                        valueState="{validation>/EmpIqama_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Profession on Iqama -->
                    <Label
                        id="idProfessionOnIqamaLabel"
                        text="Profession on Iqama"
                    />
                    <Input
                        id="idProfessionOnIqamaInput"
                        value="{empModel>/employee/Profession}"
                        valueStateText="{= ${validation>/Profession_ValueState} === 'Error' ? 'Required and Max Length 50' : ''}"
                        valueState="{validation>/Profession_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Employee Date Of Birth -->
                    <Label
                        id="idEmployeeDateOfBirthLabel"
                        text="Employee Date Of Birth"
                        labelFor="idEmployeeDateOfBirthDateTimePicker"
                    />
                    <DatePicker
                        id="idEmployeeDateOfBirtePicker"
                        placeholder="Enter Date"
                        displayFormat="dd-MM-yyyy"
                        value="{
                            path: 'empModel>/employee/DateOfBirth'
                        }"
                        valueStateText="{= ${validation>/DateOfBirth_ValueState} === 'Error' ? 'Required and Must be 18+' : ''}"
                        valueState="{validation>/DateOfBirth_ValueState}"
                        change="handleDateOfBirth"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Age -->
                    <Label
                        id="idAgeLabel"
                        text="Employee Age"
                    />
                    <Input
                        id="idAgeInput"
                        value="{empModel>/employee/Age}"
                        editable="false"
                    />
                    <!-- Employee Iqama Validity Date -->
                    <Label
                        id="idEmployeeIqamaValidityDateLabel"
                        text="Employee Iqama Validity Date"
                        labelFor="idEmployeeIqamaValidityDateDatePicker"
                    />
                    <DatePicker
                        id="idEmployeeIqamaValidityDateDatePicker"
                        placeholder="Enter Date"
                        displayFormat="dd-MM-yyyy"
                        value="{empModel>/employee/IqamaValidityDate}"
                        valueStateText="{= ${validation>/IqamaValidityDate_ValueState} === 'Error' ? 'Required field' : ''}"
                        valueState="{validation>/IqamaValidityDate_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Employee Start Date -->
                    <Label
                        id="idEmployeeStartDateLabel"
                        text="Employee Start Date"
                        labelFor="idEmployeeStartDateDatePicker"
                    />
                    <DatePicker
                        id="idEmployeeStartDateDatePicker"
                        placeholder="Enter Date"
                        displayFormat="dd-MM-yyyy"
                        value="{empModel>/employee/EmpStartDate}"
                        valueStateText="{= ${validation>/EmpStartDate_ValueState} === 'Error' ? 'Required field' : ''}"
                        valueState="{validation>/EmpStartDate_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Position -->
                    <Label
                        id="idPositionLabel"
                        text="Position"
                    />
                    <Select
                        id="idPositionSelect"
                        width="100%"
                        selectedKey="{empModel>/employee/Position_PositionId}"
                        items="{empModel>/position}"
                        valueStateText="{= ${validation>/Position_PositionId_ValueState} === 'Error' ? 'Select Position' : ''}"
                        valueState="{validation>/Position_PositionId_ValueState}"
                        forceSelection="false"
                        editable="{userModel>/auth/create}"
                    >
                        <core:Item
                            id="idPositionItem"
                            key="{empModel>PositionId}"
                            text="{empModel>PositionName}"
                        />
                        <!-- <core:Item id="idPositionItem" key="{PositionSet>SeqId}" text="{PositionSet>Postion}" /> -->
                    </Select>
                    <!-- Ajeer Validity Date -->
                    <Label
                        id="idAjeerValidityDateLabel"
                        text="Ajeer Validity Date"
                        labelFor="idAjeerValidityDateDatePicker"
                    />
                    <DatePicker
                        id="idAjeerValidityDateDatePicker"
                        placeholder="Enter Date"
                        displayFormat="dd-MM-yyyy"
                        value="{empModel>/employee/AjeerValidityDate}"
                        valueStateText="{= ${validation>/AjeerValidityDate_ValueState} === 'Error' ? 'Required field' : ''}"
                        valueState="{validation>/AjeerValidityDate_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Health Card Number -->
                    <Label
                        id="idHealthCardNumberLabel"
                        text="Health Card Number"
                    />
                    <Input
                        id="idHealthCardNumberInput"
                        maxLength="{validation>/HealthCardNum_MaxLength}"
                        value="{empModel>/employee/HealthCardNum}"
                        valueStateText="{= ${validation>/HealthCardNum_ValueState} === 'Error' ? 'Required and Max length 20' : ''}"
                        valueState="{validation>/HealthCardNum_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Health Card Validity Date -->
                    <Label
                        id="idHealthCardValidityDateLabel"
                        text="Health Card Validity Date"
                        labelFor="idHealthCardValidityDateDatePicker"
                    />
                    <DatePicker
                        id="idHealthCardValidityDateDatePicker"
                        placeholder="Enter Date"
                        displayFormat="dd-MM-yyyy"
                        value="{empModel>/employee/HealthCardValidityDate}"
                        valueStateText="{= ${validation>/HealthCardValidityDate_ValueState} === 'Error' ? 'Required field' : ''}"
                        valueState="{validation>/HealthCardValidityDate_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Requisition Number -->
                    <Label
                        id="idRequisitionNumberLabel"
                        text="Requisition Number"
                    />
                    <Input
                        id="idRequisitionNumberInput"
                        maxLength="{validation>/RequisitionNum_MaxLength}"
                        value="{empModel>/employee/RequisitionNum}"
                        valueStateText="{= ${validation>/RequisitionNum_ValueState} === 'Error' ? 'Required and Max Length 10' : ''}"
                        valueState="{validation>/RequisitionNum_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <core:Title text="" />
                    <!-- Rate Per Hour -->
                    <Label
                        id="idRatePerHourLabel"
                        text="Rate Per Hour"
                    />
                    <Input
                        id="idRatePerHourInput"
                        maxLength="{validation>/RatePerHour_MaxLength}"
                        value="{empModel>/employee/RatePerHour}"
                        valueStateText="{= ${validation>/RatePerHour_ValueState} === 'Error' ? 'Required and Max Length 4' : ''}"
                        valueState="{validation>/RatePerHour_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Supplier Code -->
                    <Label
                        id="idSupplierCodeLabel"
                        text="Supplier Code"
                    />
                    <Input
                        id="idSupplierCodeInput"
                        maxLength="{validation>/SupplierCode_MaxLength}"
                        value="{empModel>/employee/SupplierCode}"
                        valueStateText="{= ${validation>/SupplierCode_ValueState} === 'Error' ? 'Required and Max Length 10' : ''}"
                        valueState="{validation>/SupplierCode_ValueState}"
                        liveChange="onChangeSupCode"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Supplier Name -->
                    <Label
                        id="idSupplierNameLabel"
                        text="Supplier Name"
                    />
                    <Input
                        id="idSupplierNameInput"
                        value="{empModel>/employee/SupplierName}"
                        valueStateText="{= ${validation>/SupplierName_ValueState} === 'Error' ? 'Required and Max Length 50' : ''}"
                        valueState="{validation>/SupplierName_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Supplier Phone Number -->
                    <Label text="Supplier Phone Number" />
                    <Input
                        maxLength="{validation>/SupplierPhone_MaxLength}"
                        value="{empModel>/employee/SupplierPhone}"
                        valueStateText="{= ${validation>/SupplierPhone_ValueState} === 'Error' ? 'Required and Max Length 15' : ''}"
                        valueState="{validation>/SupplierPhone_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <Label text="Old Employee Id" />
                    <Input
                        value="{empModel>/employee/OldEmpId}"
                        editable="{userModel>/auth/create}"
                        maxLength="{validation>/LineManager_MaxLength}"
                    />
                    <Label text="Line Manager Id" />
                    <Input
                        value="{empModel>/employee/LineManager}"
                        valueStateText="{= ${validation>/LineManager_ValueState} === 'Error' ? 'Required and Max Length 6' : ''}"
                        valueState="{validation>/LineManager_ValueState}"
                        maxLength="{validation>/LineManager_MaxLength}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Supplier Contract Number -->
                    <Label
                        id="idSupplierContractNumberLabel"
                        text="Supplier Contract Number"
                    />
                    <Input
                        id="idSupplierContractNumberInput"
                        maxLength="{validation>/SupplierContractNum_MaxLength}"
                        value="{empModel>/employee/SupplierContractNum}"
                        valueStateText="{= ${validation>/SupplierContractNum_ValueState} === 'Error' ? 'Required and Max Length 20' : ''}"
                        valueState="{validation>/SupplierContractNum_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Supplier Contract Start Date -->
                    <Label
                        id="idSupplierContractStartDateLabel"
                        text="Supplier Contract Start Date"
                        labelFor="idSupplierContractStartDateDatePicker"
                    />
                    <DatePicker
                        id="idSupplierContractStartDateDatePicker"
                        placeholder="Enter Date"
                        displayFormat="dd-MM-yyyy"
                        value="{empModel>/employee/SupplierContractStrDate}"
                        valueStateText="{= ${validation>/SupplierContractStrDate_ValueState} === 'Error' ? 'Required field' : ''}"
                        valueState="{validation>/SupplierContractStrDate_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Supplier Contract End Date -->
                    <Label
                        id="idSupplierContractEndDateLabel"
                        text="Supplier Contract End Date"
                        labelFor="idSupplierContractEndDateDatePicker"
                    />
                    <DatePicker
                        id="idSupplierContractEndDateDatePicker"
                        placeholder="Enter Date"
                        displayFormat="dd-MM-yyyy"
                        value="{empModel>/employee/SupplierContractEndDate}"
                        valueStateText="{= ${validation>/SupplierContractEndDate_ValueState} === 'Error' ? 'Required field' : ''}"
                        valueState="{validation>/SupplierContractEndDate_ValueState}"
                        editable="{userModel>/auth/create}"
                    />
                    <!-- Active Flage -->
                    <Label
                        id="idActiveFlageLabel"
                        text="Active Flag"
                        labelFor="idActiveFlageDatePicker"
                    />
                    <Switch
                        id="idActiveFlageDatePicker"
                        state="{empModel>/employee/ActiveFlag}"
                        customTextOn="Yes"
                        customTextOff="No"
                        enabled="{userModel>/auth/create}"
                    />
                    <!-- Black List -->
                    <Label
                        id="idBlackListLabel"
                        text="Black List"
                        labelFor="idBlackListDatePicker"
                    />
                    <Switch
                        id="idBlackListDatePicker"
                        state="{empModel>/employee/BlackList}"
                        customTextOn="Yes"
                        customTextOff="No"
                        enabled="{userModel>/auth/create}"
                    />
                    <Label
                        text="Shift Type"
                        labelFor="idShiftType"
                    />
                    <!-- <Switch
                        state="{empModel>/employee/ShiftType}"
                        customTextOn="Day"
                        customTextOff="Night"
                        enabled="{userModel>/auth/create}"
                    /> -->
                    <SegmentedButton
                        id="idShiftType"
                        selectedKey="{empModel>/employee/ShiftType}"
                        enabled="{userModel>/auth/create}"
                    >
                        <items>
                            <SegmentedButtonItem
                                text="Day"
                                key="D"
                                icon="sap-icon://light-mode"
                            />
                            <SegmentedButtonItem
                                text="Night"
                                key="N"
                                icon="sap-icon://dark-mode"
                            />
                        </items>
                    </SegmentedButton>
                    <!-- Upload Iqama -->
                    <Label
                        id="idUploadIqamaLabel"
                        text="Upload Iqama"
                    />
                    <FlexBox width="100%">
                        <u:FileUploader
                            id="idFileUploader"
                            name="uploadIqama"
                            uploadUrl="{empModel>/employee/IqamaFileUrl}"
                            value="{empModel>/employee/IqamaFileUrl}"
                            tooltip="Upload your file to the local server"
                            change="handleUploadComplete"
                            mimeType="application/pdf, image/*,"
                            class="sapUiTinyMarginEnd"
                            enabled="{userModel>/auth/create}"
                        />
                        <Button
                            press="handlePopoverPressUploadIqama"
                            icon="sap-icon://image-viewer"
                            width="10%"
                            type="Accept"
                        />
                    </FlexBox>
                    <!-- Upload Ajeer -->
                    <Label
                        id="idUploadAjeerLabel"
                        text="Upload Ajeer"
                    />
                    <FlexBox width="100%">
                        <u:FileUploader
                            id="idUploadAjeerFileUploader"
                            name="uploadAjeer"
                            uploadUrl="{empModel>/employee/AjeerFileUrl}"
                            value="{empModel>/employee/AjeerFileUrl}"
                            tooltip="Upload your file to the local server"
                            change="handleUploadComplete"
                            mimeType="application/pdf, image/*,"
                            class="sapUiTinyMarginEnd"
                            enabled="{userModel>/auth/create}"
                        />
                        <Button
                            press="handlePopoverPressUploadAjeer"
                            icon="sap-icon://image-viewer"
                            width="10%"
                            type="Accept"
                        />
                    </FlexBox>
                    <!-- Upload Health Card -->
                    <Label
                        id="idUploadHealthCardLabel"
                        text="Upload Health Card"
                    />
                    <FlexBox width="100%">
                        <u:FileUploader
                            id="idUploadHealthCardFileUploader"
                            name="uploadHealthCard"
                            uploadUrl="{empModel>/employee/HealthFileUrl}"
                            value="{empModel>/employee/HealthFileUrl}"
                            tooltip="Upload your file to the local server"
                            change="handleUploadComplete"
                            mimeType="image/*"
                            class="sapUiTinyMarginEnd"
                            enabled="{userModel>/auth/create}"
                        />
                        <Button
                            text=""
                            press="handlePopoverPressUploadHealthCard"
                            icon="sap-icon://image-viewer"
                            width="10%"
                            type="Accept"
                        />
                    </FlexBox>
                    <!-- Upload Employee Photo -->
                    <Label
                        id="idUploadEmployeePhotoLabel"
                        text="Upload Employee Photo"
                    />
                    <FlexBox width="100%">
                        <u:FileUploader
                            id="idUploadEmployeePhotoFileUploader"
                            name="uploadEmployeePhoto"
                            uploadUrl="{empModel>/employee/ProfileFileUrl}"
                            value="{empModel>/employee/ProfileFileUrl}"
                            tooltip="Upload your file to the local server"
                            change="handleUploadComplete"
                            mimeType="application/pdf, image/*,"
                            class="sapUiTinyMarginEnd"
                            enabled="{userModel>/auth/create}"
                        />
                        <Button
                            text=""
                            press="handlePopoverPressUploadEmployeePhoto"
                            icon="sap-icon://image-viewer"
                            width="10%"
                            type="Accept"
                        />
                    </FlexBox>
                </form:content>
            </form:SimpleForm>
            <FlexBox
                justifyContent="Center"
                class="sapUiMediumMargin"
            >
                <Button
                    type="Accept"
                    text="Sumbit"
                    press="onHandleSubmit"
                    icon="sap-icon://status-positive"
                    ariaDescribedBy="defaultButtonDescription genericButtonDescription"
                    visible="{= ${empModel>/employee/EmpId} ? false : true}"
                    enabled="{userModel>/auth/create}"
                />
                <Button
                    type="Accept"
                    text="Update"
                    press="onHandleSubmit"
                    icon="sap-icon://status-positive"
                    ariaDescribedBy="defaultButtonDescription genericButtonDescription"
                    visible="{= ${empModel>/employee/EmpId} ? true : false}"
                    enabled="{userModel>/auth/create}"
                />
            </FlexBox>
        </content>
    </Page>
</mvc:View>
